
# Escrito por:  Roderico <superantigo arr0ba gmail.com>
# Nascimento: 17-Janeiro-2015
# Script para reconhecimento óptico de caracteres (OCR) 
# Modo de uso:  só que não... #./NomeDoScript.sh 
# Versão: 0.1
# 


# Passo 1A:
# Extração de imagem(ns) de PDF-scan.
pdfimages -f NumeroDaPaginaInicial -l NumeroDaPaginaFinal NomeDoPDF.pdf NomeDaImagemQueSerahGerada


#  Passo 1B:
#  Se necessário girar as imagens:
#  90--> vira prá direita
# -90--> vira prá esquerda
#  Em lote:
b=1
for cadaUma in *.ppm;
do
  convert -rotate 90 $cadaUma $bNovoNome;
  let b++;
done

#Passo 2 CASO haja duas páginas por imagem:
# 
# Cortar imagens pela metade com imagemagick (importante):
# convert: nome do programa que faz parte do pacote imagemagick
# O primeiro comando cortará a metade da esquerda,
# o segundo, da direita:
convert Imagem.ppm -crop 1065x1596 Imagem-A.ppm 

convert Imagem.ppm -crop 1065x1596+1065+19 Imagem-B.ppm

# uma primeira tentativa de automatizar esse processo:

a=1;
for isso in *;
# Como aqui a intenção é que o arquivo seja automaticamente
# dividido mais ou menos pela metade, vc descobre o tamanho total da imagem
# da forma que mais lhe aprouver, e daí: no primeiro valor (1065x1596);
# o que vem antes do x (1065) deve ser o valor relativo a METADE do tamanho
# total da imagem original. Podemos deduzir então que o tamanho original dessa
# imagem do exemplo era de 2130. O segundo valor, após o x, é a largura da imagem.
# Portanto, (GERALMENTE) não interessa modificar esse valor.
# Ao diminuir gradualmente esse valor, sua imagem será gradualmente cortada na base.
#
do convert $isso -crop 1065x1596 $a-A-Imagem.ppm;
# Aqui é bem mais complicado. Eu uso por pura tentativa e erro, empiricamente. =S 
convert $isso -crop 1065x1596+1065+19 $a-B-Imagem.ppm;
let a++; done

#Passo Final do OCR stritu senso:
#
#
tesseract -l por NomeDaMinhaImagemDeEntrada.ppm TextoDeSaida
#Automação. É necessário fazer a listagem por hora de criação do arquivo, já que o shell listará todo bagunçado,
# por conta da numeração 1A, 1B, 2A, 2B...
a=1; for isso in $( ls -1r --sort=time * ); do  tesseract -l por $isso gyuoc; cat gyuoc.txt >>DB; let a++; done

# Limpeza de dados:
#
# Apagando linhas em branco:
sed '/^$/d' TextodeOrigem.txt >> novoarquivo.txt

# JuntaLinhas; funções zz! :3 Embora o ideal de uso desse programinha ainda seja parágrafo por parágrafo... =/
zzjuntalinhas TextoDeOrigem.txt>>TextoDeSaida.tx

# Automação:
#
#i-> cada arquivo de imagem que será passado por OCR.
for i in *pbm; do tesseract -l por $i temp; cat temp.txt >>DB; done
